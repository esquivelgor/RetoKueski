CREATE DATABASE KUESKIARCO;
USE KUESKIARCO;
CREATE TABLE CLIENT(
    CLIENT_ID INT NOT NULL AUTO_INCREMENT,
    CLIENT_NAME VARCHAR(50) NOT NULL,
    CLIENT_FIRST_LASTNAME VARCHAR(50) NOT NULL,
    CLIENT_SECOND_LASTNAME VARCHAR (50) NOT NULL DEFAULT '',
    CLIENT_BIRTHDATE DATE NOT NULL,
    CLIENT_NATIONALITY VARCHAR(50) DEFAULT 'Mexicanx',
    CLIENT_STATE_OF_BIRTH VARCHAR(50),
    CLIENT_CURP VARCHAR(18) NOT NULL,
    CLIENT_ECONOMIC_ACTIVITY VARCHAR(50),
    CLIENT_GENDER VARCHAR(2) DEFAULT 'ND',
    CLIENT_PHONE_NUMBER VARCHAR(13),
    CLIENT_EMAIL VARCHAR(40),
    IS_CLIENT SMALLINT DEFAULT 0,
    IS_BLOCKED SMALLINT DEFAULT 0,
    IS_IN_OPOSITION SMALLINT DEFAULT 0,
    CREATED_AT DATETIME,
    UPDATED_AT DATETIME,
    DELETED_AT DATETIME,
    PRIMARY KEY (CLIENT_ID)
);
CREATE TABLE IDENTIFICATIONS(
    IDENTIFICATION_ID INT NOT NULL AUTO_INCREMENT,
    CLIENT_ID INT,
    IDENTIFICATION_TYPE VARCHAR(2),
    IDENTIFICATION_NUMBER VARCHAR(20),
    CREATED_AT DATETIME,
    UPDATED_AT DATETIME,
    DELETED_AT DATETIME,
    PRIMARY KEY (IDENTIFICATION_ID)
);

CREATE TABLE ADDRESSES(
    ADDRESS_ID INT NOT NULL AUTO_INCREMENT,
    CLIENT_ID INT,
    ADDRESS_COUNTRY VARCHAR(30) NOT NULL,
    ADDRESS_STATE VARCHAR(30),
    ADDRESS_CITY VARCHAR(40),
    ADDRESS_NEIGHBORHOOD VARCHAR (40),
    ADDRESS_ZIPCODE VARCHAR(5) NOT NULL,
    ADDRESS_STREET VARCHAR(40),
    ADDRESS_EXT_NUMBER VARCHAR (7),
    ADDRESS_INT_NUMBER VARCHAR (6),
    CREATED_AT DATETIME,
    UPDATED_AT DATETIME,
    DELETED_AT DATETIME,
    PRIMARY KEY (ADDRESS_ID)
);
CREATE TABLE ARCO_PETITIONS(
    PETITION_ID INT NOT NULL AUTO_INCREMENT,
    CLIENT_ID INT,
    ARCO_RIGHT VARCHAR(1),
    CURRENT_STATUS VARCHAR(30),
    PETITION_COMMENT VARCHAR(255),
    CREATED_AT DATETIME,
    UPDATED_AT DATETIME,
    DELETED_AT DATETIME,
    PRIMARY KEY (PETITION_ID)
);

ALTER TABLE IDENTIFICATIONS ADD FOREIGN KEY(CLIENT_ID) REFERENCES CLIENT(CLIENT_ID);
ALTER TABLE ADDRESSES ADD FOREIGN KEY(CLIENT_ID) REFERENCES CLIENT(CLIENT_ID);
ALTER TABLE ARCO_PETITIONS ADD FOREIGN KEY(CLIENT_ID) REFERENCES CLIENT(CLIENT_ID);

INSERT INTO CLIENT (CLIENT_NAME, CLIENT_FIRST_LASTNAME, CLIENT_SECOND_LASTNAME, CLIENT_BIRTHDATE, CLIENT_CURP, CLIENT_GENDER, CLIENT_PHONE_NUMBER, CLIENT_EMAIL, IS_CLIENT, IS_BLOCKED, IS_IN_OPOSITION, CREATED_AT, UPDATED_AT, DELETED_AT)
VALUES ('John', 'Doe', 'Smith', '1990-01-01', 'ABCD123456WXYZ78', 'M', '+525555555555', 'john.doe@example.com', 1, 0, 0, NOW(), NULL, NULL);


INSERT INTO CLIENT (CLIENT_NAME, CLIENT_FIRST_LASTNAME, CLIENT_SECOND_LASTNAME, CLIENT_BIRTHDATE, CLIENT_CURP, CLIENT_GENDER, CLIENT_PHONE_NUMBER, CLIENT_EMAIL, IS_CLIENT, IS_BLOCKED, IS_IN_OPOSITION, CREATED_AT, UPDATED_AT, DELETED_AT)
VALUES ('Jane', 'Doe', NULL, '1995-05-05', 'EFGH123456IJKL90', 'F', '+525555555556', 'jane.doe@example.com', 1, 0, 0, NOW(), NULL, NULL);


INSERT INTO CLIENT (CLIENT_NAME, CLIENT_FIRST_LASTNAME, CLIENT_SECOND_LASTNAME, CLIENT_BIRTHDATE, CLIENT_CURP, CLIENT_GENDER, CLIENT_PHONE_NUMBER, CLIENT_EMAIL, IS_CLIENT, IS_BLOCKED, IS_IN_OPOSITION, CREATED_AT, UPDATED_AT, DELETED_AT)
VALUES ('Bob', 'Smith', NULL, '1985-08-08', 'MNOP123456QRST56', 'M', '+525555555557', 'bob.smith@example.com', 1, 0, 0, NOW(), NULL, NULL);


INSERT INTO CLIENT (CLIENT_NAME, CLIENT_FIRST_LASTNAME, CLIENT_SECOND_LASTNAME, CLIENT_BIRTHDATE, CLIENT_CURP, CLIENT_GENDER, CLIENT_PHONE_NUMBER, CLIENT_EMAIL, IS_CLIENT, IS_BLOCKED, IS_IN_OPOSITION, CREATED_AT, UPDATED_AT, DELETED_AT)
VALUES ('Alice', 'Johnson', 'Brown', '1998-12-31', 'UVWX123456YZAB34', 'F', '+525555555558', 'alice.johnson@example.com', 0, 0, 0, NOW(), NULL, NULL);


INSERT INTO CLIENT (CLIENT_NAME, CLIENT_FIRST_LASTNAME, CLIENT_SECOND_LASTNAME, CLIENT_BIRTHDATE, CLIENT_CURP, CLIENT_GENDER, CLIENT_PHONE_NUMBER, CLIENT_EMAIL, IS_CLIENT, IS_BLOCKED, IS_IN_OPOSITION, CREATED_AT, UPDATED_AT, DELETED_AT)
VALUES ('David', 'Lee', 'Nguyen', '1980-03-15', 'CDEF123456GHIJ23', 'M', '+525555555559', 'david.nguyen@example.com', 0, 0, 0, NOW(), NULL, NULL);

INSERT INTO IDENTIFICATIONS (CLIENT_ID, IDENTIFICATION_TYPE, IDENTIFICATION_NUMBER, CREATED_AT, UPDATED_AT, DELETED_AT)
VALUES (1, '1', '123456', NOW(), NULL, NULL),
       (1, '2', 'ABC123', NOW(), NULL, NULL);

INSERT INTO IDENTIFICATIONS (CLIENT_ID, IDENTIFICATION_TYPE, IDENTIFICATION_NUMBER, CREATED_AT, UPDATED_AT, DELETED_AT)
VALUES (2, '1', '123456', NOW(), NULL, NULL),
       (2, '2', 'ABC123', NOW(), NULL, NULL);

INSERT INTO IDENTIFICATIONS (CLIENT_ID, IDENTIFICATION_TYPE, IDENTIFICATION_NUMBER, CREATED_AT, UPDATED_AT, DELETED_AT)
VALUES (3, '1', '123456', NOW(), NULL, NULL),
       (3, '2', 'ABC123', NOW(), NULL, NULL);

INSERT INTO IDENTIFICATIONS (CLIENT_ID, IDENTIFICATION_TYPE, IDENTIFICATION_NUMBER, CREATED_AT, UPDATED_AT, DELETED_AT)
VALUES (4, '1', '123456', NOW(), NULL, NULL),
       (4, '2', 'ABC123', NOW(), NULL, NULL);

INSERT INTO IDENTIFICATIONS (CLIENT_ID, IDENTIFICATION_TYPE, IDENTIFICATION_NUMBER, CREATED_AT, UPDATED_AT, DELETED_AT)
VALUES (5, '1', '123456', NOW(), NULL, NULL),
       (5, '2', 'ABC123', NOW(), NULL, NULL);

INSERT INTO ADDRESSES (CLIENT_ID, ADDRESS_COUNTRY, ADDRESS_STATE, ADDRESS_CITY, ADDRESS_NEIGHBORHOOD, ADDRESS_ZIPCODE, ADDRESS_STREET, ADDRESS_EXT_NUMBER, ADDRESS_INT_NUMBER, CREATED_AT)
VALUES 
    (1, 'Mexico', 'Jalisco', 'Guadalajara', 'Colonia Americana', '44160', 'Calle Justo Sierra', '123', 'B', NOW()),
    (2, 'Mexico', 'Nuevo Leon', 'Monterrey', 'Colonia San Jeronimo', '64630', 'Calle Venustiano Carranza', '456', '10', NOW()),
    (3, 'Mexico', 'Mexico', 'Mexico City', 'Colonia Roma', '06700', 'Calle Durango', '789', 'A', NOW()),
    (4, 'Mexico', 'Puebla', 'Puebla City', 'Colonia Santa Maria', '72090', 'Avenida Juarez', '456', '20', NOW()),
    (5, 'Mexico', 'Guerrero', 'Acapulco', 'Colonia Centro', '39300', 'Calle Morelos', '112', 'B', NOW());

DELIMITER //

CREATE PROCEDURE delete_client(IN c_id INT)
BEGIN
    UPDATE CLIENT SET
        IS_BLOCKED = 1,
        DELETED_AT = NOW()
    WHERE CLIENT_ID = c_id;
END //

DELIMITER ;

DELIMITER //

CREATE PROCEDURE delete_arco_petition(IN p_id INT)
BEGIN
    UPDATE ARCO_PETITIONS SET
        DELETED_AT = NOW()
    WHERE PETITION_ID = p_id;
END //

DELIMITER ;

DELIMITER //

CREATE PROCEDURE delete_identification(IN i_id INT)
BEGIN
    UPDATE IDENTIFICATIONS SET
        DELETED_AT = NOW()
    WHERE IDENTIFICATION_ID = i_id;
END //

DELIMITER ;

DELIMITER //

CREATE PROCEDURE delete_address(IN a_id INT)
BEGIN
    UPDATE ADDRESSES SET
        DELETED_AT = NOW()
    WHERE ADDRESS_ID = a_id;
END //

DELIMITER ;

DELIMITER //

CREATE PROCEDURE add_arco_petition(
    IN c_id INT,
    IN a_right VARCHAR(1),
    IN p_comment VARCHAR(255)
)
BEGIN
    DECLARE current_status_val VARCHAR(30);
    IF a_right = '1' THEN
        SET current_status_val = "aprobada";
    ELSE
        SET current_status_val = "pendiente";
    END IF;
    
    INSERT INTO ARCO_PETITIONS (
        CLIENT_ID,
        ARCO_RIGHT,
        CURRENT_STATUS,
        PETITION_COMMENT,
        CREATED_AT
    ) VALUES (
        c_id,
        a_right,
        current_status_val,
        p_comment,
        NOW()    );
END //
DELIMITER;


DELIMITER //

CREATE PROCEDURE approve_opposition (
    IN c_id INT
)
BEGIN
    UPDATE CLIENT 
    SET IS_IN_OPOSITION = 1, UPDATED_AT = NOW()
    WHERE CLIENT_ID = c_id;
END //

DELIMITER ;

DELIMITER //

CREATE PROCEDURE approve_arco_petition (
  IN p_id INT
)
BEGIN
  UPDATE ARCO_PETITIONS SET STATUS = 'aprobada', UPDATED_AT = NOW() WHERE PETITION_ID = p_id;
END//

DELIMITER ;

DELIMITER //

CREATE PROCEDURE reject_arco_petition (
  IN p_id INT
)
BEGIN
  UPDATE ARCO_PETITIONS SET STATUS = 'rechazada', UPDATED_AT = NOW() WHERE PETITION_ID = p_id;
END//

DELIMITER ;

DELIMITER //

CREATE PROCEDURE approve_rectification (
    IN c_id INT,
    IN c_name VARCHAR(40),
    IN c_first_lastname VARCHAR(25),
    IN c_second_lastname VARCHAR(25),
    IN c_birthdate DATE,
    IN c_nationality VARCHAR(25),
    IN c_state_of_birth VARCHAR(19),
    IN c_curp VARCHAR(18),
    IN c_economic_activity VARCHAR(25),
    IN c_gender VARCHAR(2),
    IN c_phone_number VARCHAR(13),
    IN c_email VARCHAR(40)
)
BEGIN
    UPDATE CLIENT 
    SET CLIENT_NAME = c_name,
        CLIENT_FIRST_LASTNAME = c_first_lastname,
        CLIENT_SECOND_LASTNAME = c_second_lastname,
        CLIENT_BIRTHDATE = c_birthdate,
        CLIENT_NATIONALITY = c_nationality,
        CLIENT_STATE_OF_BIRTH = c_state_of_birth,
        CLIENT_CURP = c_curp,
        CLIENT_ECONOMIC_ACTIVITY = c_economic_activity,
        CLIENT_GENDER = c_gender,
        CLIENT_PHONE_NUMBER = c_phone_number,
        CLIENT_EMAIL = c_email,
        UPDATED_AT = NOW()
    WHERE CLIENT_ID = c_id;
END //

DELIMITER ;

DELIMITER //
CREATE PROCEDURE sp_get_pending_petitions()
BEGIN
    SELECT ARCO_PETITIONS.PETITION_ID, 
           CONCAT(CLIENT.CLIENT_NAME, ' ', CLIENT.CLIENT_FIRST_LASTNAME, ' ', CLIENT.CLIENT_SECOND_LASTNAME) AS CLIENT_FULL_NAME, 
           CASE ARCO_PETITIONS.ARCO_RIGHT 
               WHEN 1 THEN 'Acceso' 
               WHEN 2 THEN 'Rectificación' 
               WHEN 3 THEN 'Cancelación' 
               WHEN 4 THEN 'Oposición' 
               ELSE '' 
           END AS ARCO_RIGHT,
           ARCO_PETITIONS.CREATED_AT
    FROM ARCO_PETITIONS 
    INNER JOIN CLIENT ON ARCO_PETITIONS.CLIENT_ID = CLIENT.CLIENT_ID
    WHERE ARCO_PETITIONS.CURRENT_STATUS = 'pendiente';
END //
DELIMITER;

DELIMITER //
CREATE PROCEDURE sp_get_not_pending_petitions()
BEGIN
    SELECT ARCO_PETITIONS.PETITION_ID, 
           CONCAT(CLIENT.CLIENT_NAME, ' ', CLIENT.CLIENT_FIRST_LASTNAME, ' ', CLIENT.CLIENT_SECOND_LASTNAME) AS CLIENT_FULL_NAME, 
           CASE ARCO_PETITIONS.ARCO_RIGHT 
               WHEN 1 THEN 'Acceso' 
               WHEN 2 THEN 'Rectificación' 
               WHEN 3 THEN 'Cancelación' 
               WHEN 4 THEN 'Oposición' 
               ELSE '' 
           END AS ARCO_RIGHT,
           ARCO_PETITIONS.CURRENT_STATUS,
           ARCO_PETITIONS.CREATED_AT,
           ARCO_PETITIONS.UPDATED_AT
    FROM ARCO_PETITIONS 
    INNER JOIN CLIENT ON ARCO_PETITIONS.CLIENT_ID = CLIENT.CLIENT_ID
    WHERE ARCO_PETITIONS.CURRENT_STATUS != 'pendiente';
END //
DELIMITER;

DELIMITER //

CREATE PROCEDURE get_arco_petition_info(IN p_id INT)
BEGIN
    SELECT ARCO_PETITIONS.PETITION_ID, 
           CONCAT(CLIENT.CLIENT_NAME, ' ', CLIENT.CLIENT_FIRST_LASTNAME, ' ', CLIENT.CLIENT_SECOND_LASTNAME) AS CLIENT_FULL_NAME, 
           CASE ARCO_PETITIONS.ARCO_RIGHT 
               WHEN 1 THEN 'Acceso' 
               WHEN 2 THEN 'Rectificación' 
               WHEN 3 THEN 'Cancelación' 
               WHEN 4 THEN 'Oposición' 
               ELSE '' 
           END AS ARCO_RIGHT,
           ARCO_PETITIONS.CURRENT_STATUS,
           ARCO_PETITIONS.PETITION_COMMENT,
           ARCO_PETITIONS.CREATED_AT,
           ARCO_PETITIONS.UPDATED_AT
    FROM ARCO_PETITIONS 
    INNER JOIN CLIENT ON ARCO_PETITIONS.CLIENT_ID = CLIENT.CLIENT_ID
    WHERE ARCO_PETITIONS.PETITION_ID =p_id;
END//

DELIMITER ;

DELIMITER $$
CREATE PROCEDURE get_client_info(IN client_id INT)
BEGIN
    SELECT CLIENT_ID, CONCAT(CLIENT_NAME, ' ', CLIENT_FIRST_LASTNAME, ' ', CLIENT_SECOND_LASTNAME) AS full_name, 
    CLIENT_BIRTHDATE, 
    CLIENT_NATIONALITY, 
    CLIENT_STATE_OF_BIRTH, 
    CLIENT_CURP, 
    CLIENT_ECONOMIC_ACTIVITY,
    CLIENT_GENDER, 
    CLIENT_PHONE_NUMBER, 
    CLIENT_EMAIL, 
    IS_CLIENT, 
    IS_BLOCKED, 
    IS_IN_OPOSITION, 
    CREATED_AT, 
    UPDATED_AT, 
    DELETED_AT
    FROM CLIENT
    WHERE CLIENT_ID = client_id;
END $$
DELIMITER ;